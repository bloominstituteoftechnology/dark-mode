[{"C:\\Users\\As646\\OneDrive\\Desktop\\programming\\dark-mode\\src\\index.js":"1","C:\\Users\\As646\\OneDrive\\Desktop\\programming\\dark-mode\\src\\components\\Navbar.jsx":"2","C:\\Users\\As646\\OneDrive\\Desktop\\programming\\dark-mode\\src\\components\\Charts.jsx":"3","C:\\Users\\As646\\OneDrive\\Desktop\\programming\\dark-mode\\src\\components\\Chart.jsx":"4","C:\\Users\\As646\\OneDrive\\Desktop\\programming\\dark-mode\\src\\hooks\\useLocalStorage.js":"5"},{"size":1093,"mtime":1607460024529,"results":"6","hashOfConfig":"7"},{"size":478,"mtime":1607453375731,"results":"8","hashOfConfig":"7"},{"size":605,"mtime":1607452594040,"results":"9","hashOfConfig":"7"},{"size":1039,"mtime":1607449222250,"results":"10","hashOfConfig":"7"},{"size":747,"mtime":1607459835302,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"1tyrqdp",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"C:\\Users\\As646\\OneDrive\\Desktop\\programming\\dark-mode\\src\\index.js",["25"],"import React, { useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport Charts from \"./components/Charts\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\nimport \"./style.css\";\r\nimport useLocalStorage from \"./hooks/useLocalStorage\";\r\n\r\nconst App = () => {\r\n  const [coinData, setCoinData] = useLocalStorage(\"coin info\", []);\r\n  const [darkMode, setDarkMode] = useLocalStorage(\"dark mode\", false);\r\n\r\n  useEffect(() => {\r\n    if (coinData.length < 1) {\r\n      axios\r\n        .get(\r\n          \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=10&page=1&sparkline=true\"\r\n        )\r\n        .then((res) => setCoinData(res.data))\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      return;\r\n    }\r\n  }, []);\r\n  return (\r\n    <div className={darkMode ? \"dark-mode App\" : \"App\"}>\r\n      <Navbar darkMode={darkMode} setDarkMode={setDarkMode} />\r\n      <Charts coinData={coinData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n",["26","27"],"C:\\Users\\As646\\OneDrive\\Desktop\\programming\\dark-mode\\src\\components\\Navbar.jsx",["28"],"import React, { useState } from 'react';\r\n\r\nconst Navbar = (props) => {\r\n  const toggleMode = e => {\r\n    e.preventDefault();\r\n    props.setDarkMode(!props.darkMode);\r\n  };\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <h1>Crypto Tracker</h1>\r\n      <div className=\"dark-mode__toggle\">\r\n        <div\r\n          onClick={toggleMode}\r\n          className={props.darkMode ? 'toggle toggled' : 'toggle'}\r\n        />\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\As646\\OneDrive\\Desktop\\programming\\dark-mode\\src\\components\\Charts.jsx",[],"C:\\Users\\As646\\OneDrive\\Desktop\\programming\\dark-mode\\src\\components\\Chart.jsx",[],"C:\\Users\\As646\\OneDrive\\Desktop\\programming\\dark-mode\\src\\hooks\\useLocalStorage.js",[],{"ruleId":"29","severity":1,"message":"30","line":26,"column":6,"nodeType":"31","endLine":26,"endColumn":8,"suggestions":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":1,"column":17,"nodeType":"39","messageId":"40","endLine":1,"endColumn":25},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'coinData.length' and 'setCoinData'. Either include them or remove the dependency array.","ArrayExpression",["41"],"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",{"desc":"44","fix":"45"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [coinData.length, setCoinData]",{"range":"46","text":"47"},[797,799],"[coinData.length, setCoinData]"]